# -*- coding: utf-8 -*-
"""SvmOneNonLinearData.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZJ6os0P2AMChQif3BUJKUxv3pFGGIE1p

SVM Algorithm on Nonlinear data
"""

from sklearn.datasets import make_circles
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import  Axes3D
import numpy as np

x,y=make_circles(n_samples=500,noise=0.02)

print(x.shape,y.shape)

plt.scatter(x[:,0],x[:,1],c=y)

def phi(x):
  """Non Linear Transfromation """
  x1=x[:,0]
  x2=x[:,1]
  x3=x1**2+x2**2

  x_=np.zeros((x.shape[0],3))
  print(x_.shape)

  x_[:,:-1]=x
  x_[:,-1]=x3

  return x_

x_=phi(x)

print(x[:3,:])

print(x_[:3,:])
#here in tarnsformation we did'nt change the first two columns but we addes a third colummn which is sum of squqres of x1,x2

def plot3d(x,show=True):
  fig=plt.figure(figsize=(10,10))
  ax=fig.add_subplot(111,projection='3d')
  x1=x[:,0]
  x2=x[:,1]
  x3=x[:,2]
  ax.scatter(x1,x2,x3,zdir='z',s=20,c=y,depthshade=True)
  if(show==True):
      plt.show()
  return ax

plot3d(x_)

"""logistic classifier"""

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import cross_val_score

lr=LogisticRegression()

acc=cross_val_score(lr,x,y,cv=5).mean()
print("accuracy x(2D ) is %.4f"%(acc*100))

"""Logistic Classifier on 3D"""

acc=cross_val_score(lr,x_,y,cv=5).mean()
print("accuracy x(2D ) is %.4f"%(acc*100))
#with the 3d accuracy is 100%

"""#visualize the descision surface"""

lr.fit(x_,y)

wts=lr.coef_
wts

bias=lr.intercept_
bias

xx,yy=np.meshgrid(range(-2,2),range(-2,2))
print(xx)
print(yy)

z=-(wts[0,0]**xx + wts[0,1]**yy+bias)/wts[0,2]
print(z)

ax=plot3d(x_,False)
ax=ax.plot_surface(xx,yy,z,alpha=0.5)
plt.show()

